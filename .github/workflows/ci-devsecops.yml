name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write   # Needed for CodeQL & security alerts
  actions: read
  checks: write
  packages: write          # Needed for pushing to GHCR
  id-token: write
  issues: write            # Allow ZAP to create/update GitHub issues if enabled later

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: productsdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Test Backend
        working-directory: backend
        run: |
          npm install
          npm audit --audit-level=high || true
          npm test

      - name: Install & Test Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
          npm audit --audit-level=high || true
          npm test

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}-backend:latest ./backend
          docker push ghcr.io/${{ github.repository }}-backend:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}-frontend:latest ./frontend
          docker push ghcr.io/${{ github.repository }}-frontend:latest

  security-scans:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1. SAST (CodeQL)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # 2. Dependency Scan (Snyk or fallback to npm audit)
      - name: Dependency Scan
        run: |
          if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "Running Snyk scan..."
            npx snyk test --all-projects || true
          else
            echo "No SNYK_TOKEN found, running npm audit instead..."
            npm audit --audit-level=high || true
          fi
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # 3. Secrets Scan (Gitleaks)
      - name: Run gitleaks
        uses: zricethezav/gitleaks-action@v2

  docker-security:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 4. Container Image Scan (Trivy)
      - name: Scan Backend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}-backend:latest
          format: table

      - name: Scan Frontend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository }}-frontend:latest
          format: table

  dast-scan:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start app
        run: docker compose up -d && sleep 30

      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap_output
          chmod 777 zap_output
          # Create rules file to downgrade noisy alerts
          cat <<EOF > .zap/rules.tsv
10020   WARN   Ignore missing anti-clickjacking header
10021   WARN   Ignore X-Content-Type-Options missing
10037   WARN   Ignore X-Powered-By disclosure
10038   WARN   Ignore CSP not set
10063   WARN   Ignore Permissions Policy header missing
90004   WARN   Ignore Spectre isolation warnings
EOF
          docker run --rm --network host \
            -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:3000 \
              -r zap_output/zap_report.html -m 2 -c .zap/rules.tsv

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_output/zap_report.html
