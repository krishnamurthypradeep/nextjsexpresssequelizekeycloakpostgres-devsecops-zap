name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: productsdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install & Test Backend
        working-directory: backend
        run: |
          npm install
          npm test

      - name: Install & Test Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
          npm run test

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker images
        run: docker compose build

      - name: Save Docker images
        run: docker save $(docker images --format '{{.Repository}}:{{.Tag}}') -o docker-images.tar

      - name: Upload Docker images as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: docker-images.tar
